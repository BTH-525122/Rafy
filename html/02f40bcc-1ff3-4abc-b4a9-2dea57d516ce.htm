<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-zh-CN.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>托管属性查询</title><meta name="Language" content="zh-cn" /><meta name="Microsoft.Help.Id" content="02f40bcc-1ff3-4abc-b4a9-2dea57d516ce" /><meta name="Description" content="注意，本查询方式（基于 CreatePropertyQuery 方法）已经过时，不再可用！！！新的文档正在更新中……" /><meta name="Microsoft.Help.ContentType" content="Concepts" /><meta name="BrandingAware" content="true" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">Rafy User Guide</div><div class="pageBody"><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="titleColumn">托管属性查询</td></tr></table><span class="introStyle"></span><div class="introduction"><p>注意，本查询方式（基于 CreatePropertyQuery 方法）已经过时，不再可用！！！新的文档正在更新中……</p><p>本文包含以下章节：</p><ul class="autoOutline"><li class="outlineSectionEntry"><a href="#demo">代码示例</a></li><li class="outlineSectionEntry"><a href="#proQuery">托管属性查询</a></li><li class="outlineSectionEntry"><a href="#linqToMP">Linq 查询与托管属性查询的关系</a></li><li class="outlineSectionEntry"><a href="#PropertiesMatchCriteria">使用 PropertiesMatchCriteria 进行精确属性匹配</a></li></ul></div><div class="collapsibleAreaRegion" id="demo"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />代码示例</span></div><div id="ID1RBSection" class="collapsibleSection"><p>
                    托管属性查询是直接面向实体托管属性类 <span class="code">IManagedProperty</span> 进行查询的查询模式。框架提供了一系列方便的查询接口。示例：
                </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EACAEAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EACAEAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EACAEAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EACAEAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">public</span> WarehouseList GetByCode(<span class="highlight-keyword">string</span> warehouseCode, <span class="highlight-keyword">string</span> nameKeywords, PagingInfo pagingInfo)
{
    <span class="highlight-keyword">return</span> <span class="highlight-keyword">this</span>.FetchList(r =&gt; r.DA_GetByCode(warehouseCode, nameKeywords, pagingInfo));
}
<span class="highlight-keyword">private</span> EntityList DA_GetByCode(<span class="highlight-keyword">string</span> warehouseCode, <span class="highlight-keyword">string</span> nameKeywords, PagingInfo pagingInfo)
{
    IPropertyQuery q = <span class="highlight-keyword">this</span>.CreatePropertyQuery();

    <span class="highlight-comment">//条件对比</span>
    q.Constrain(Warehouse.CodeProperty).Equal(warehouseCode);
    <span class="highlight-keyword">if</span> (!<span class="highlight-keyword">string</span>.IsNullOrEmpty(nameKeywords))
    {
        q.And().Constrain(Warehouse.CodeProperty).Contains(nameKeywords);
    }

    q.JoinRef(Warehouse.AdministratorProperty);
    q.Constrain(User.NameProperty).Equal(<span class="highlight-literal">"admin"</span>);

    <span class="highlight-comment">//排序</span>
    q.OrderBy(Warehouse.IdProperty, OrderDirection.Descending);

    <span class="highlight-comment">//以指定的分页信息分页</span>
    q.Paging(pagingInfo);

    <span class="highlight-keyword">return</span> <span class="highlight-keyword">this</span>.QueryList(q);
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EACAEAAA");</script><p>
                    可以看到，查询中使用的都是属性的静态字段作为参数，如：<span class="code">Warehouse.CodeProperty、User.NameProperty</span> 等，所以叫托管属性查询。
                </p><p>
                    使用场景：一般情况下，建议使用 Linq 查询。如果要编写多个实体间通用的查询方法，才使用托管属性查询。
                </p></div><div class="collapsibleAreaRegion" id="proQuery"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />托管属性查询</span></div><div id="ID2RBSection" class="collapsibleSection"><p>相对于 Linq 查询，托管属性查询有以下好外：</p><ul><li><p>可以编写多个实体间的通用查询。</p><p>托管属性查询不象 Linq 查询，它不需要使用确切的属性表达式，只需要使用属性的运行时对象 IManagedProperty 即可。这使得开发人员可以编写更加通用的查询。例如仓库基类 EntityRepository 中的所有查询方法，都是直接通过使用实体托管属性来实现的，例如：GetById、GetByParentId 等。</p></li><li><p>可以为扩展属性编写查询。</p><p>其它插件为当前插件定义的扩展属性，无法通过 Linq 表达式进行查询。</p><p>
                            关于扩展属性，参见：<a href="760ddc4e-6b70-4713-b173-c855a00e25d0.htm">扩展属性</a>。
                        </p></li></ul></div><div class="collapsibleAreaRegion" id="linqToMP"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Linq 查询与托管属性查询的关系</span></div><div id="ID3RBSection" class="collapsibleSection"><p>Linq 查询是基于托管属性查询来实现的。实体查询的核心是托管属性查询。由于托管属性查询的易用性不强，所以框架又构建了 Linq 查询来为了方便开发人员直接使用实体的属性进行查询。</p><p>
                    可以通过 <span class="code">IPropertyQuery.CombineLinq(IQueryable queryable)</span> 方法，传入 Linq 查询对象把 Linq 查询转换为托管属性查询。
                </p></div><div class="collapsibleAreaRegion" id="PropertiesMatchCriteria"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID4RB')" onkeypress="SectionExpandCollapse_CheckKey('ID4RB', event)" tabindex="0"><img id="ID4RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />使用 PropertiesMatchCriteria 进行精确属性匹配</span></div><div id="ID4RBSection" class="collapsibleSection"><p>在查询时，我们常常期望对实体的一组属性中的每一个都进行精确匹配，这时可以使用 <span class="code">PropertiesMatchCriteria</span> 类型来快速实现查询。例如，以下查询实现了同时通过编码和名称来查询指定的仓库：</p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EACABAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EACABAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EACABAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EACABAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">public</span> Warehouse GetByCodeAndName(<span class="highlight-keyword">string</span> warehouseCode, <span class="highlight-keyword">string</span> warehouseName)
{
    <span class="highlight-keyword">return</span> <span class="highlight-keyword">this</span>.FetchFirst(<span class="highlight-keyword">new</span> PropertiesMatchCriteria
    {
        { Warehouse.CodeProperty, warehouseCode },
        { Warehouse.NameProperty, warehouseName },
    });
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EACABAAA");</script><p>以上代码，功能上完全等同于下面的查询：</p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAAABAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAAABAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EAAABAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAAABAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">public</span> Warehouse GetByCodeAndName(<span class="highlight-keyword">string</span> warehouseCode, <span class="highlight-keyword">string</span> warehouseName)
{
    <span class="highlight-keyword">return</span> <span class="highlight-keyword">this</span>.FetchFirst(r =&gt; r.DA_GetByCodeAndName(warehouseCode, warehouseName));
}
<span class="highlight-keyword">private</span> EntityList DA_GetByCodeAndName(<span class="highlight-keyword">string</span> warehouseCode, <span class="highlight-keyword">string</span> warehouseName)
{
    IPropertyQuery q = <span class="highlight-keyword">this</span>.CreatePropertyQuery();

    q.Constrain(Warehouse.CodeProperty).Equal(warehouseCode);
    q.And().Constrain(Warehouse.NameProperty).Contains(warehouseName);

    <span class="highlight-keyword">return</span> <span class="highlight-keyword">this</span>.QueryList(q);
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAAABAAA");</script></div></div></div><div id="pageFooter" class="pageFooter">有问题请联系 9474649@qq.com。<div class="feedbackLink">有关这个主题的评论请发邮件到
        <a id="HT_MailLink" href="mailto:9474649%40qq.com?Subject=Rafy User Guide">发送反馈</a></div><script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script></div></body></html>