<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-zh-CN.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>贪婪加载</title><meta name="Language" content="zh-cn" /><meta name="Microsoft.Help.Id" content="3e3ee502-ecbb-417d-8fbf-fa24ec21e2bc" /><meta name="Description" content="在使用实体时，往往还需要使用实体的一些关系实体。虽然，Rafy 中的实体关系都支持懒加载，但是过多地使用懒加载会造成 N+1 性能问题（关于 N+1 问题，本文中有相关的介绍：OEA ORM 框架中的冗余属性设计http://www.cnblogs.com/zgynhqf/archive/2012/08/10/2633047.html ）。所以如果需要在查询实体后，使用每一个实体的关系实体，则需要同时查询出实体所拥有的这些关系实体，即贪婪加载。" /><meta name="Microsoft.Help.ContentType" content="Concepts" /><meta name="BrandingAware" content="true" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">Rafy User Guide<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="69b641cf-d1fe-4f06-877f-b479d268a3fc.htm" title="Rafy User Guide" tocid="roottoc">Rafy User Guide</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="69b641cf-d1fe-4f06-877f-b479d268a3fc.htm" title="Rafy框架" tocid="69b641cf-d1fe-4f06-877f-b479d268a3fc">Rafy框架</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="c8e6cd25-c674-4cd1-9880-816d11f58eb8.htm" title="领域实体框架" tocid="c8e6cd25-c674-4cd1-9880-816d11f58eb8">领域实体框架</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="6b377084-3fc9-4bf6-94d7-bc9a42ed82a7.htm" title="实体仓库" tocid="6b377084-3fc9-4bf6-94d7-bc9a42ed82a7">实体仓库</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="59c80aec-c910-4880-b165-c3495ed5eb3e.htm" title="编写查询" tocid="59c80aec-c910-4880-b165-c3495ed5eb3e">编写查询</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="c7c6d07b-bb41-4590-a2a6-8b0b49ce1c0b.htm" title="Linq 查询" tocid="c7c6d07b-bb41-4590-a2a6-8b0b49ce1c0b">Linq 查询</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="c2eced2c-e434-4d53-a06d-fbc518fbddf5.htm" title="Sql 查询" tocid="c2eced2c-e434-4d53-a06d-fbc518fbddf5">Sql 查询</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="ae9a2512-1528-401a-ac4f-502304a7ae03.htm" title="分页查询" tocid="ae9a2512-1528-401a-ac4f-502304a7ae03">分页查询</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="56b9e7bc-2656-4bde-95dd-69e71aeafc6a.htm" title="数据行数查询" tocid="56b9e7bc-2656-4bde-95dd-69e71aeafc6a">数据行数查询</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="55180b16-9fda-42a1-8c4f-27d037aeae76.htm" title="表格查询" tocid="55180b16-9fda-42a1-8c4f-27d037aeae76">表格查询</a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="3e3ee502-ecbb-417d-8fbf-fa24ec21e2bc.htm" title="贪婪加载" tocid="3e3ee502-ecbb-417d-8fbf-fa24ec21e2bc">贪婪加载</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="titleColumn">贪婪加载</td></tr></table><span class="introStyle"></span><div class="introduction"><p>
                在使用实体时，往往还需要使用实体的一些关系实体。虽然，Rafy 中的实体关系都支持懒加载，但是过多地使用懒加载会造成 N+1 性能问题（关于 N+1 问题，本文中有相关的介绍：<a href="http://www.cnblogs.com/zgynhqf/archive/2012/08/10/2633047.html" target="_blank">OEA ORM 框架中的冗余属性设计</a> ）。所以如果需要在查询实体后，使用每一个实体的关系实体，则需要同时查询出实体所拥有的这些关系实体，即贪婪加载。
            </p></div><div class="collapsibleAreaRegion" id="inter"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID0RB')" onkeypress="SectionExpandCollapse_CheckKey('ID0RB', event)" tabindex="0"><img id="ID0RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />使用方法</span></div><div id="ID0RBSection" class="collapsibleSection"><p>
                    Rafy 中的关系有引用关系和组合关系，这些关系都可以声明为贪婪加载。要使用贪婪加载，必须使用托管属性查询（由于 Linq 查询可以转换为托管属性查询，所以也支持使用 Linq 查询）。调用 <span class="code">IPropertyQuery.EagerLoad</span> 方法，传入需要贪婪加载的托管属性即可。
                </p><p /></div><div class="collapsibleAreaRegion" id="demo"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />代码示例</span></div><div id="ID2RBSection" class="collapsibleSection"><p>以下代码示例如何在加载仓库实体的同时，一并加载出仓库的管理员及仓库下所有的货品信息。其中，管理员是一个引用实体属性，而货品则是仓库的组合子属性：</p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID1EAAABAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EAAABAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID1EAAABAAA');return false;" title="Copy">Copy</a></div></div><div id="ID1EAAABAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">public</span> WarehouseList GetByCode(<span class="highlight-keyword">string</span> warehouseCode)
{
    <span class="highlight-keyword">return</span> <span class="highlight-keyword">this</span>.FetchList(r =&gt; r.DA_GetByCode(warehouseCode));
}
<span class="highlight-keyword">private</span> EntityList DA_GetByCode(<span class="highlight-keyword">string</span> warehouseCode)
{
    IPropertyQuery query = <span class="highlight-keyword">this</span>.CreatePropertyQuery();

    query.Constrain(Warehouse.CodeProperty).Equal(warehouseCode);

    <span class="highlight-comment">//在加载 Warehouse 实体的同时，也加载每一个 Warehouse 的 Administrator 引用实体。</span>
    query.EagerLoad(Warehouse.AdministratorProperty);

    <span class="highlight-comment">//在加载 Warehouse 实体的同时，也加载每一个 Warehouse 的 ProductList 组合子实体。</span>
    query.EagerLoad(Warehouse.ProductListProperty);

    <span class="highlight-keyword">return</span> <span class="highlight-keyword">this</span>.QueryList(query);
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EAAABAAA");</script></div></div></div><div id="pageFooter" class="pageFooter">胡庆访 @版权所有，有问题请联系 9474649@qq.com。<div class="feedbackLink">有关这个主题的评论请发邮件到
        <a id="HT_MailLink" href="mailto:9474649%40qq.com?Subject=Rafy User Guide">发送反馈</a></div><script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script></div></body></html>